# Docker Compose Production Configuration
# Use: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up -d
version: '3.9'

services:
  # Production Backend with Gunicorn
  backend:
    build:
      target: production
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
    deploy:
      replicas: 2
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
    
  # Production Frontend with Nginx
  frontend:
    build:
      target: production
      args:
        - NODE_ENV=production
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.25'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"
        
  # Production Database with Enhanced Security
  db:
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
    # Remove port exposure for security in production
    ports: []
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "5"
        
  # Production Qdrant
  qdrant:
    deploy:
      replicas: 1
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    # Remove port exposure for security in production  
    ports: []
    logging:
      driver: json-file
      options:
        max-size: "50m"
        max-file: "5"

# Production-specific volumes with backups
volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/sales-copilot/data/postgres
  qdrant_storage:
    driver: local
    driver_opts:
      type: none
      o: bind  
      device: /opt/sales-copilot/data/qdrant